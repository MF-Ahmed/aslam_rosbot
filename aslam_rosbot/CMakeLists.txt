cmake_minimum_required(VERSION 2.8.3)
project(aslam_rosbot)

add_compile_options(-std=c++14)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O3")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif(NOT CMAKE_BUILD_TYPE)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  geometry_msgs
  nav_msgs
  roscpp
  rospy
  std_msgs
  tf
  visualization_msgs
  message_generation
  dynamic_reconfigure
  grid_map_ros
  
)

add_service_files(
  FILES
  get_frontier_list.srv
  get_best_path.srv
  get_best_head.srv
)

add_message_files(
  FILES
  PointArray.msg
  AvailablePaths.msg
  SinglePath.msg
  FrontierWithPath.msg
)

generate_messages(
  DEPENDENCIES
  std_msgs
  geometry_msgs
  nav_msgs
  
)

generate_dynamic_reconfigure_options(
  cfg/informationGain.cfg
)

catkin_package(
CATKIN_DEPENDS
message_runtime
nav_msgs
std_msgs
geometry_msgs
roscpp
rospy
)

include_directories(
include
${catkin_INCLUDE_DIRS})

# Executables
#add_executable(map_extract_node src/map_extract.cpp)

# Dependencies
#add_dependencies(map_extract_node aslam_rosbot_generate_messages_cpp)

# Link libraries
#target_link_libraries(map_extract_node ${catkin_LIBRARIES})
########################

add_executable(d_opt_global_rrt_detector src/global_rrt_detector.cpp src/functions.cpp src/mtrand.cpp)
target_link_libraries(d_opt_global_rrt_detector ${catkin_LIBRARIES})

add_executable(d_opt_local_rrt_detector src/local_rrt_detector.cpp src/functions.cpp src/mtrand.cpp)
target_link_libraries(d_opt_local_rrt_detector ${catkin_LIBRARIES})

#add_executable(entropy src/entropy.cpp)
#target_link_libraries(entropy ${catkin_LIBRARIES})

add_executable(raytracing src/raytracing.cpp )
target_link_libraries(raytracing ${catkin_LIBRARIES})






